/*
 * This file was generated by the Gradle 'init' task.
 */
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:latest.release"
    }
}


plugins {
    id 'java'
    id 'com.jfrog.artifactory' version "4.9.6"
    id 'jacoco'
    id 'maven'
    id 'maven-publish'
}

def artifactory_url = System.getenv("ARTIFACTORY_URL") ?: "http://artifactory.ecom.chewy.com/artifactory"
def artifactory_user = System.getenv("ARTIFACTORY_USER") ?: ""
def artifactory_password = System.getenv("ARTIFACTORY_PASSWORD") ?: ""
def artifactory_repo = System.getenv("ARTIFACTORY_REPO") ?: "libs-snapshot-local"

repositories {
    mavenLocal()
    maven {
        url = 'http://repo.maven.apache.org/maven2'
    }
}

dependencies {
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.8'
    compile 'org.jetbrains:annotations:17.0.0'
    testCompile 'junit:junit:4.12'
    testCompile 'com.squareup.okhttp3:mockwebserver:3.2.0'
}

group = 'com.chewy.services.recommendation'
version = '0.10-SNAPSHOT'
description = 'JSONAPI Converter'
sourceCompatibility = '1.7'

artifactory {
    contextUrl = "${artifactory_url}"
    publish {
        repository {
            repoKey =  "${artifactory_repo}"
            username = "${artifactory_user}"
            password = "${artifactory_password}"
        }
        defaults {
            publications('mavenJava')
        }
        publishBuildInfo = true
        publishArtifacts = true
        publishPom = true
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact(sourcesJar) {
                classifier = 'sources'
            }
            artifact(javadocJar) {
                classifier = 'javadoc'
            }
        }
    }
}